// –ö–æ–º–∞–Ω–¥–∞: /sellcar
mp.events.addCommand('sellcar', (player, fullText) => {
	// fullText –º–æ–∂–µ –±—É—Ç–∏ —Ü—ñ–Ω–æ—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /sellcar 5000
	let price = fullText.trim() || '–î–æ–≥–æ–≤—ñ—Ä–Ω–∞';

	// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≥—Ä–∞–≤—Ü—è
	const pos = player.position;

	// –°—Ç–≤–æ—Ä—é—î–º–æ –∞–≤—Ç–æ –±—ñ–ª—è –≥—Ä–∞–≤—Ü—è
	const vehicle = mp.vehicles.new(
		mp.joaat('infernus'), // –º–æ–¥–µ–ª—å –º–∞—à–∏–Ω–∏
		new mp.Vector3(pos.x + 2, pos.y, pos.z), // —Å–ø–∞–≤–Ω–∏–º–æ –ø–æ—Ä—É—á
		{
			heading: player.heading,
			color: [
				[255, 0, 0],
				[0, 0, 0],
			],
			numberPlate: 'SELL',
		}
	);

	// –î–æ–¥–∞—î–º–æ 3D —Ç–µ–∫—Å—Ç –Ω–∞–¥ –∞–≤—Ç–æ
	const text = mp.labels.new(
		`üöó –ü—Ä–æ–¥–∞—î—Ç—å—Å—è –∞–≤—Ç–æ\n–¶—ñ–Ω–∞: ${price}$`,
		new mp.Vector3(pos.x + 2, pos.y, pos.z + 1.5), // —Ç—Ä–æ—Ö–∏ –≤–∏—â–µ –º–∞—à–∏–Ω–∏
		{
			los: false,
			font: 0,
			drawDistance: 20,
			color: [255, 255, 255, 255],
			dimension: 0,
		}
	);

	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —â–æ–± –ø–æ—Ç—ñ–º –≤–∏–¥–∞–ª—è—Ç–∏ —Ç–µ–∫—Å—Ç —Ä–∞–∑–æ–º —ñ–∑ –∞–≤—Ç–æ
	vehicle.customText = text;

	player.outputChatBox(`–ú–∞—à–∏–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑ —Ü—ñ–Ω–æ—é: ${price}$`);
});

// –ü—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –º–∞—à–∏–Ω–∏ ‚Äî –≤–∏–¥–∞–ª—è—î–º–æ —Ç–µ–∫—Å—Ç
mp.events.add('entityDestroy', entity => {
	if (entity.type === 'vehicle' && entity.customText) {
		entity.customText.destroy();
	}
});

mp.events.addCommand('car', (player, fullText, model) => {
	if (!model) return player.outputChatBox('–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /car [model]');
	player.spawnNewVehicle(model.toLowerCase());
});

mp.Player.prototype.spawnNewVehicle = function (model) {
	if (this.vehicle) this.vehicle.destroy();
	const pos = this.position;
	this.vehicle = mp.vehicles.new(
		mp.joaat(model),
		new mp.Vector3(pos.x + 2, pos.y, pos.z),
		{
			numberPlate: 'CUSTOM',
			color: [
				[255, 0, 0],
				[0, 0, 255],
			],
		}
	);
	this.putIntoVehicle(this.vehicle, -1);
};
